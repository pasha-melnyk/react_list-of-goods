{"version":3,"sources":["App.tsx","GoodsList/GoodsList.tsx","index.tsx"],"names":["SortTypes","GoodsList","copiedGoods","className","map","good","goodsFromServer","App","state","goods","isReversed","sortBy","Default","isVisible","goodsLength","showGoodsList","setState","setGoodsLength","event","target","value","goodsToShow","filter","length","sort","sortType","reverse","good1","good2","Length","Alphabet","localeCompare","changeSortType","currentTarget","name","reset","type","onClick","this","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sLAiBKA,E,2ECVQC,EAA6B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC3C,OACE,oBAAIC,UAAU,aAAd,SACGD,EAAYE,KAAI,SAAAC,GAAI,OACnB,oBAAeF,UAAU,kBAAzB,SACGE,GADMA,SDPXC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGN,K,oBAAAA,E,gBAAAA,E,YAAAA,M,SAcCO,E,4MACJC,MAAe,CACbC,MAAOH,EACPI,YAAY,EACZC,OAAQX,EAAUY,QAClBC,WAAW,EACXC,YAAa,G,EAGfC,cAAgB,WACd,EAAKC,SAAS,CACZH,WAAW,K,EAIfI,eAAiB,SAACC,GAChB,EAAKF,SAAS,CACZF,aAAcI,EAAMC,OAAOC,S,EAI/BC,YAAc,WACZ,MAII,EAAKb,MAHPC,EADF,EACEA,MACAC,EAFF,EAEEA,WACAI,EAHF,EAGEA,YAGIZ,EAAcO,EAAMa,QAAO,SAAAjB,GAAI,OAAIA,EAAKkB,QAAUT,KAQxD,OANAZ,EAAYsB,KAAK,EAAKC,UAElBf,GACFR,EAAYwB,UAGPxB,G,EAGTwB,QAAU,WACR,EAAKV,UAAS,SAAAR,GAAK,MAAK,CACtBE,YAAaF,EAAME,gB,EAIvBe,SAAW,SAACE,EAAeC,GACzB,OAAQ,EAAKpB,MAAMG,QACjB,KAAKX,EAAU6B,OACb,OAAOF,EAAMJ,OAASK,EAAML,OAE9B,KAAKvB,EAAU8B,SACb,OAAOH,EAAMI,cAAcH,GAE7B,QACE,OAAO,I,EAIbI,eAAiB,SAACd,GAChB,EAAKF,SAAS,CACZL,OAAQO,EAAMe,cAAcC,KAC5BxB,YAAY,K,EAIhByB,MAAQ,WACN,EAAKnB,SAAS,CACZL,OAAQX,EAAUY,QAClBF,YAAY,EACZI,YAAa,K,4CAIjB,WACE,OACE,sBAAKX,UAAU,MAAf,UACE,uCACA,wBACEiC,KAAK,SACLC,QAASC,KAAKvB,cACdZ,UAAU,kBAHZ,mBAQCmC,KAAK9B,MAAMK,WACV,qCACE,wBACEuB,KAAK,SACLC,QAASC,KAAKZ,QACdvB,UAAU,kBAHZ,qBAQA,wBACEiC,KAAK,SACLF,KAAMlC,EAAU8B,SAChBO,QAASC,KAAKN,eACd7B,UAAU,kBAJZ,iCASA,wBACEiC,KAAK,SACLF,KAAMlC,EAAU6B,OAChBQ,QAASC,KAAKN,eACd7B,UAAU,kBAJZ,4BASA,wBACEiC,KAAK,SACLC,QAASC,KAAKH,MACdhC,UAAU,iBAHZ,mBAOA,gCACG,wBACD,yBACE+B,KAAK,gBACLd,MAAOkB,KAAK9B,MAAMM,YAClByB,SAAUD,KAAKrB,eAHjB,UAKE,wBAAQG,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,sBAIJ,cAAC,EAAD,CAAWlB,YAAaoC,KAAKjB,0B,GA5IvBmB,IAAMC,WAoJTlC,IEhLfmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cd974c1f.chunk.js","sourcesContent":["import React from 'react';\nimport { GoodsList } from './GoodsList';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortTypes {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  Default = '',\n}\n\ntype State = {\n  goods: string[];\n  isReversed: boolean;\n  sortBy: SortTypes;\n  isVisible: boolean;\n  goodsLength: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    isReversed: false,\n    sortBy: SortTypes.Default,\n    isVisible: false,\n    goodsLength: 1,\n  };\n\n  showGoodsList = () => {\n    this.setState({\n      isVisible: true,\n    });\n  };\n\n  setGoodsLength = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      goodsLength: +event.target.value,\n    });\n  };\n\n  goodsToShow = () => {\n    const {\n      goods,\n      isReversed,\n      goodsLength,\n    } = this.state;\n\n    const copiedGoods = goods.filter(good => good.length >= goodsLength);\n\n    copiedGoods.sort(this.sortType);\n\n    if (isReversed) {\n      copiedGoods.reverse();\n    }\n\n    return copiedGoods;\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortType = (good1: string, good2: string) => {\n    switch (this.state.sortBy) {\n      case SortTypes.Length:\n        return good1.length - good2.length;\n\n      case SortTypes.Alphabet:\n        return good1.localeCompare(good2);\n\n      default:\n        return 0;\n    }\n  };\n\n  changeSortType = (event: React.MouseEvent<HTMLButtonElement>) => {\n    this.setState({\n      sortBy: event.currentTarget.name as SortTypes,\n      isReversed: false,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: SortTypes.Default,\n      isReversed: false,\n      goodsLength: 1,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <button\n          type=\"button\"\n          onClick={this.showGoodsList}\n          className=\"btn btn-success\"\n        >\n          Start\n        </button>\n\n        {this.state.isVisible && (\n          <>\n            <button\n              type=\"button\"\n              onClick={this.reverse}\n              className=\"btn btn-warning\"\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              name={SortTypes.Alphabet}\n              onClick={this.changeSortType}\n              className=\"btn btn-warning\"\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              name={SortTypes.Length}\n              onClick={this.changeSortType}\n              className=\"btn btn-warning\"\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.reset}\n              className=\"btn btn-danger\"\n            >\n              Reset\n            </button>\n            <div>\n              {'Choose goods length: '}\n              <select\n                name=\"numberOfGoods\"\n                value={this.state.goodsLength}\n                onChange={this.setGoodsLength}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n              </select>\n            </div>\n\n            <GoodsList copiedGoods={this.goodsToShow()} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport './GoodsList.css';\n\ntype Props = {\n  copiedGoods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ copiedGoods }) => {\n  return (\n    <ul className=\"list-group\">\n      {copiedGoods.map(good => (\n        <li key={good} className=\"list-group-item\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}